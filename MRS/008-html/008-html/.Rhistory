}
vects2 <- list(distinctv2)
for(i in seq_along(c)) {
#  print(v)
SQL <- paste("SELECT v3 FROM School WHERE v2='", c[i], "';", sep = "")
print(SQL)
checking <-dbGetQuery(db,SQL)
checking[is.na(checking)]<-0
avgoffirst1=sum(checking)/length(checking[[1]])
avgoffirst=length(checking[[1]])
print(avgoffirst1)
}
write.csv(avgoffirst1, file = "foo.csv")
AV <- read.csv("foo.csv", sep = "\t")
dbWriteTable(conn = db, name = "average", value = AV, row.names = FALSE)
DF<-dbReadTable(db, "average")
gvt = gvisTable(DF)
plot(gvt)
write.csv(avgoffirst1, file = "foo.csv")
AV <- read.csv("foo.csv", sep = "\t")
dbWriteTable(conn = db, name = "average", value = AV, row.names = FALSE)
DF<-dbReadTable(db, "average")
gvt = gvisTable(DF)
plot(gvt)
foo.squared = NULL
for(i in seq_along(c)) {
#  print(v)
SQL <- paste("SELECT v3 FROM School WHERE v2='", c[i], "';", sep = "")
print(SQL)
checking <-dbGetQuery(db,SQL)
checking[is.na(checking)]<-0
avgoffirst1<-sum(checking)/length(checking[[1]])
avgoffirst<-length(checking[[1]])
print(avgoffirst1)
}
write.csv(avgoffirst1, file = "foo.csv")
AV <- read.csv("foo.csv", sep = "\t")
dbWriteTable(conn = db, name = "average", value = AV, row.names = FALSE)
DF<-dbReadTable(db, "average")
gvt = gvisTable(DF)
plot(gvt)
DF<-dbReadTable(db, "average")
DF
gvt = gvisTable(DF)
for(i in seq_along(c)) {
#  print(v)
SQL <- paste("SELECT v3 FROM School WHERE v2='", c[i], "';", sep = "")
print(SQL)
checking <-dbGetQuery(db,SQL)
checking[is.na(checking)]<-0
avgoffirst1<-sum(checking)/length(checking[[1]])
avgoffirst<-length(checking[[1]])
print(avgoffirst1)
}
for(i in seq_along(c)) {
#  print(v)
SQL <- paste("SELECT v3 FROM School WHERE v2='", c[i], "';", sep = "")
#print(SQL)
checking <-dbGetQuery(db,SQL)
checking[is.na(checking)]<-0
avgoffirst1<-sum(checking)/length(checking[[1]])
avgoffirst<-length(checking[[1]])
print(avgoffirst1)
}
write.csv(avgoffirst1, file = "foo.csv")
for(i in seq_along(c)) {
#  print(v)
SQL <- paste("SELECT v3 FROM School WHERE v2='", c[i], "';", sep = "")
print(SQL)
checking <-dbGetQuery(db,SQL)
checking[is.na(checking)]<-0
avgoffirst1=sum(checking)/length(checking[[1]])
avgoffirst=length(checking[[1]])
sql <- sprintf("insert into average
(songid, avg)
values ('%s', '%s');",
c[i], avgoffirst1)
dbSendQuery(conn = db,sql)
print(avgoffirst1)
}
dbSendQuery(conn = db,
dbRemoveTable(db, "average")
dbSendQuery(conn = db,
library(sqldf)      # Loads RSQLite
library(XLConnect)
library(googleVis)
db <- dbConnect(SQLite(), dbname="Test.sqlite")
dbRemoveTable(db, "School")   # Remove the school table
School <- read.csv("ydata-ymusic-artist-names-v1_0.csv", sep = "\t")  # Read csv files into R
# Import dataframe into database
dbWriteTable(conn = db, name = "School", value = School, row.names = FALSE)
dbRemoveTable(db, "average")
dbSendQuery(conn = db,
"CREATE TABLE average
(songid TEXT,
avg TEXT)")
distinctv2<-dbGetQuery(db, "SELECT v2 from School")
distinctv2[is.na(distinctv2)]<-0
distinctv2
for (i in seq_along(distinctv2)){
a.element <- a[i]
b.element <- b[i]
c.element <- c[i]
d.element <- d[i]
}
vects2 <- list(distinctv2)
for(i in seq_along(c)) {
#  print(v)
SQL <- paste("SELECT v3 FROM School WHERE v2='", c[i], "';", sep = "")
print(SQL)
checking <-dbGetQuery(db,SQL)
checking[is.na(checking)]<-0
avgoffirst1=sum(checking)/length(checking[[1]])
avgoffirst=length(checking[[1]])
sql <- sprintf("insert into average
(songid, avg)
values ('%s', '%s');",
c[i], avgoffirst1)
dbSendQuery(conn = db,sql)
print(avgoffirst1)
}
dbWriteTable(conn = db, name = "average", value = average, row.names = FALSE)
DF<-dbReadTable(db, "average")
gvt = gvisTable(DF)
plot(gvt)
library(sqldf)      # Loads RSQLite
library(XLConnect)
library(googleVis)
db <- dbConnect(SQLite(), dbname="Test.sqlite")
dbRemoveTable(db, "School")   # Remove the school table
School <- read.csv("ydata-ymusic-artist-names-v1_0.csv", sep = "\t")  # Read csv files into R
# Import dataframe into database
dbWriteTable(conn = db, name = "School", value = School, row.names = FALSE)
dbRemoveTable(db, "average")
dbSendQuery(conn = db,
"CREATE TABLE average
(songid TEXT,
avg TEXT)")
distinctv2<-dbGetQuery(db, "SELECT v2 from School")
dbRemoveTable(db, "average")
dbSendQuery(conn = db,
"CREATE TABLE average
(songid TEXT,
avg TEXT)")
distinctv2<-dbGetQuery(db, "SELECT v2 from School")
distinctv2[is.na(distinctv2)]<-0
distinctv2
for (i in seq_along(distinctv2)){
a.element <- a[i]
b.element <- b[i]
c.element <- c[i]
d.element <- d[i]
}
vects2 <- list(distinctv2)
for(i in seq_along(c)) {
#  print(v)
SQL <- paste("SELECT v3 FROM School WHERE v2='", c[i], "';", sep = "")
print(SQL)
checking <-dbGetQuery(db,SQL)
checking[is.na(checking)]<-0
avgoffirst1=sum(checking)/length(checking[[1]])
avgoffirst=length(checking[[1]])
sql <- sprintf("insert into average
(songid, avg)
values ('%s', '%s');",
c[i], avgoffirst1)
dbSendQuery(conn = db,sql)
print(avgoffirst1)
}
DF<-dbReadTable(db, "average")
gvt = gvisTable(DF)
plot(gvt)
library(sqldf)      # Loads RSQLite
library(XLConnect)
library(googleVis)
db <- dbConnect(SQLite(), dbname="Test.sqlite")
dbRemoveTable(db, "School")   # Remove the school table
School <- read.csv("ydata-ymusic-artist-names-v1_0.csv", sep = "\t")  # Read csv files into R
# Import dataframe into database
dbWriteTable(conn = db, name = "School", value = School, row.names = FALSE)
dbRemoveTable(db, "average")
dbSendQuery(conn = db,
"CREATE TABLE average
(songid TEXT,
avg TEXT)")
distinctv2<-dbGetQuery(db, "SELECT distinct(v2) from School")
distinctv2[is.na(distinctv2)]<-0
distinctv2
for (i in seq_along(distinctv2)){
a.element <- a[i]
b.element <- b[i]
c.element <- c[i]
d.element <- d[i]
}
vects2 <- list(distinctv2)
for(i in seq_along(c)) {
#  print(v)
SQL <- paste("SELECT v3 FROM School WHERE v2='", c[i], "';", sep = "")
print(SQL)
checking <-dbGetQuery(db,SQL)
checking[is.na(checking)]<-0
avgoffirst1=sum(checking)/length(checking[[1]])
avgoffirst=length(checking[[1]])
sql <- sprintf("insert into average
(songid, avg)
values ('%s', '%s');",
c[i], avgoffirst1)
dbSendQuery(conn = db,sql)
print(avgoffirst1)
}
DF<-dbReadTable(db, "average")
gvt = gvisTable(DF)
plot(gvt)
library(sqldf)      # Loads RSQLite
library(XLConnect)
library(googleVis)
db <- dbConnect(SQLite(), dbname="Test.sqlite")
dbRemoveTable(db, "School")   # Remove the school table
School <- read.csv("ydata-ymusic-artist-names-v1_0.csv", sep = "\t")  # Read csv files into R
# Import dataframe into database
dbWriteTable(conn = db, name = "School", value = School, row.names = FALSE)
dbRemoveTable(db, "average")
dbSendQuery(conn = db,
"CREATE TABLE average
(songid TEXT,
avg TEXT)")
distinctv2<-dbGetQuery(db, "SELECT v2 from School")
distinctv2[is.na(distinctv2)]<-0
distinctv2
for (i in seq_along(distinctv2)){
a.element <- a[i]
b.element <- b[i]
c.element <- c[i]
d.element <- d[i]
}
vects2 <- list(distinctv2)
for(i in seq_along(c)) {
#  print(v)
SQL <- paste("SELECT v3 FROM School WHERE v2='", c[i], "';", sep = "")
print(SQL)
checking <-dbGetQuery(db,SQL)
checking[is.na(checking)]<-0
avgoffirst1=sum(checking)/length(checking[[1]])
avgoffirst=length(checking[[1]])
sql <- sprintf("insert into average
(songid, avg)
values ('%s', '%s');",
c[i], avgoffirst1)
dbSendQuery(conn = db,sql)
print(avgoffirst1)
}
DF<-dbReadTable(db, "average")
gvt = gvisTable(DF)
plot(gvt)
dbRemoveTable(db, "average")
library(sqldf)      # Loads RSQLite
library(XLConnect)
library(googleVis)
db <- dbConnect(SQLite(), dbname="Test.sqlite")
dbRemoveTable(db, "School")   # Remove the school table
School <- read.csv("ydata-ymusic-artist-names-v1_0.csv", sep = "\t")  # Read csv files into R
# Import dataframe into database
dbWriteTable(conn = db, name = "School", value = School, row.names = FALSE)
dbRemoveTable(db, "average")
dbSendQuery(conn = db,
"CREATE TABLE average
(songid TEXT,
avg TEXT)")
distinctv2<-dbGetQuery(db, "SELECT distinct(v2) from School")
distinctv2[is.na(distinctv2)]<-0
distinctv2
for (i in seq_along(distinctv2)){
a.element <- a[i]
b.element <- b[i]
c.element <- c[i]
d.element <- d[i]
}
vects2 <- list(distinctv2)
for(i in seq_along(c)) {
#  print(v)
SQL <- paste("SELECT v3 FROM School WHERE v2='", c[i], "';", sep = "")
print(SQL)
checking <-dbGetQuery(db,SQL)
checking[is.na(checking)]<-0
avgoffirst1=sum(checking)/length(checking[[1]])
avgoffirst=length(checking[[1]])
sql <- sprintf("insert into average
(songid, avg)
values ('%s', '%s');",
c[i], avgoffirst1)
dbSendQuery(conn = db,sql)
print(avgoffirst1)
}
DF<-dbReadTable(db, "average")
gvt = gvisTable(DF)
plot(gvt)
distinctv21<-dbGetQuery(db, "SELECT distinct(songid),v1 from average")
distinctv21<-dbGetQuery(db, "SELECT distinct(songid),avg from average")
distinctv21[is.na(distinctv21)]<-0
distinctv21
distinctv21<-dbGetQuery(db, "SELECT distinct(songid),avg from average")
distinctv21[is.na(distinctv21)]<-0
distinctv21
DF<-dbReadTable(db, "average")
gvt = gvisTable(distinctv21)
plot(gvt)
library(sqldf)      # Loads RSQLite
library(XLConnect)
library(googleVis)
db <- dbConnect(SQLite(), dbname="Test.sqlite")
dbRemoveTable(db, "School")   # Remove the school table
School <- read.csv("ydata-ymusic-artist-names-v1_0.csv", sep = "\t")  # Read csv files into R
# Import dataframe into database
dbWriteTable(conn = db, name = "School", value = School, row.names = FALSE)
dbRemoveTable(db, "average")
dbSendQuery(conn = db,
"CREATE TABLE average
(songid TEXT,
avg TEXT)")
distinctv2<-dbGetQuery(db, "SELECT distinct(v2) from School")
distinctv2[is.na(distinctv2)]<-0
distinctv2
for (i in seq_along(distinctv2)){
a.element <- a[i]
b.element <- b[i]
c.element <- c[i]
d.element <- d[i]
}
vects2 <- list(distinctv2)
for(i in seq_along(c)) {
#  print(v)
SQL <- paste("SELECT v3 FROM School WHERE v2='", c[i], "';", sep = "")
print(SQL)
checking <-dbGetQuery(db,SQL)
checking[is.na(checking)]<-0
avgoffirst1=sum(checking)/length(checking[[1]])
avgoffirst=length(checking[[1]])
sql <- sprintf("insert into average
(songid, avg)
values ('%s', '%s');",
c[i], avgoffirst1)
dbSendQuery(conn = db,sql)
print(avgoffirst1)
}
distinctv21<-dbGetQuery(db, "SELECT distinct(songid),avg from average")
distinctv21[is.na(distinctv21)]<-0
distinctv21
DF<-dbReadTable(db, "average")
gvt = gvisTable(distinctv21)
plot(gvt)
foo.squared = NULL
library(gWidgets)
library(gWidgetstcltk)
win <- gwindow("Tab delimited file upload example")
grp_name <- ggroup(container = win)
lbl_data_frame_name <- glabel(
"Variable to save data to: ",
container = grp_name
)
txt_data_frame_name <- gedit("dfr", container = grp_name)
grp_upload <- ggroup(container = win)
btn_upload <- gbutton(
text      = "Upload tab delimited file",
container = grp_upload,
handler   = function(h, ...)
{
a<-"mine"
txt_data_frame_name <- gedit(a, container = grp_name)
# TODO!
}
)
btn_upload$text="hi"
# TODO!
}
library(gWidgets)
library(gWidgetstcltk)
win <- gwindow("Tab delimited file upload example")
grp_name <- ggroup(container = win)
lbl_data_frame_name <- glabel(
"Variable to save data to: ",
container = grp_name
)
txt_data_frame_name <- gedit("dfr", container = grp_name)
grp_upload <- ggroup(container = win)
btn_upload <- gbutton(
text      = "Upload tab delimited file",
container = grp_upload,
handler   = function(h, ...)
{
a<-"mine"
btn_upload$text="hi"
# TODO!
}
)
btn_upload.text="hi"
grp_upload <- ggroup(container = win)
btn_upload <- gbutton(
text      = "Upload tab delimited file",
container = grp_upload,
handler   = function(h, ...)
{
a<-"mine"
btn_upload.text="hi"
# TODO!
}
library(gWidgets)
library(gWidgetstcltk)
win <- gwindow("Tab delimited file upload example")
grp_name <- ggroup(container = win)
lbl_data_frame_name <- glabel(
"Variable to save data to: ",
container = grp_name
)
txt_data_frame_name <- gedit("dfr", container = grp_name)
grp_upload <- ggroup(container = win)
btn_upload <- gbutton(
text      = "Upload tab delimited file",
container = grp_upload,
handler   = function(h, ...)
{
a<-"mine"
btn_upload.text<-"hi"
# TODO!
}
)
text<-"hi"
grp_upload <- ggroup(container = win)
btn_upload <- gbutton(
text      = "Upload tab delimited file",
container = grp_upload,
handler   = function(h, ...)
{
a<-"mine"
grp_upload<-"hi"
# TODO!
}
)
btn_upload <- gbutton(
text      = "Upload tab delimited file",
container = grp_upload,
handler   = function(h, ...)
{
a<-"mine"
paste("Yum",
paste(svalue(h$obj),collapse=" and "),
sep = " ")
# TODO!
}
)
library(gWidgets)
library(gWidgetstcltk)
win <- gwindow("Tab delimited file upload example")
grp_name <- ggroup(container = win)
lbl_data_frame_name <- glabel(
"Variable to save data to: ",
container = grp_name
)
txt_data_frame_name <- gedit("dfr", container = grp_name)
grp_upload <- ggroup(container = win)
btn_upload <- gbutton(
text      = "Upload tab delimited file",
container = grp_upload,
handler   = function(h, ...)
{
a<-"mine"
paste("Yum",
paste(svalue(h$obj),collapse=" and "),
sep = " ")
# TODO!
}
)
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
E <- all.equal("al","all")
E
E <- all.equal("all","all")
E
if(isTRUE(E)){
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
shiny::runApp('C:/Users/Ningesh/Downloads/shiny-examples-master/shiny-examples-master/008-html')
